{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Time Tracker Tool",
    "description" : "# Introduction\nThis API defines how the employees tracking infos will be exchanged between the diffrent client sides (web dashboard & desktop app)\n# Authentication\nThis API must implement bearer/token authentication. The bearer tokens will be in JWT (JSON Web Token) format.\n",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/ajanimed/time-tracker-tool/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "localhost:3000/",
    "description" : "Development Server"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Requests",
    "description" : "All the API Requests (operations of storing and getting data)."
  }, {
    "name" : "Subscribes",
    "description" : "All the API Subscribes (operations that change the stored data)."
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "login to the api",
        "description" : "This command will authentifate users and gave them an authentification token to access to the proctected routes.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful user authentification.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "token" : {
                      "type" : "string",
                      "description" : "user access token",
                      "example" : "token"
                    },
                    "User" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error storing data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "add a new user",
        "description" : "This command will register a new user  accordance to the defined user model.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful store of the user in the database.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "User" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error storing data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get users",
        "description" : "This command will return users",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "pages number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 2
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "the number of returned elements",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Users" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/{id}" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get one user by id",
        "description" : "This command will return one user",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "User" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/supervisor/add" : {
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "add a new supervisor",
        "description" : "This command will register a new supervisor according to the supervisor model",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful store of the supervisor in the database.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Supervisor" : {
                      "$ref" : "#/components/schemas/Supervisor"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error storing data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/supervisors" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get supervisors",
        "description" : "This command will return supervisors",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "pages number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 2
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "the number of returned elements",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Supervisors" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Supervisor"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/supervisor/{id}" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get one supervisor by id",
        "description" : "This command will return one supervisor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "supervisor id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "Supervisor" : {
                      "$ref" : "#/components/schemas/Supervisor"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/employee/add" : {
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "add a new employee",
        "description" : "This command will register a new employee according to the employee model",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful store of the employee in the database.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Employee" : {
                      "$ref" : "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error storing data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/employees" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get employees",
        "description" : "This command will return employees",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "pages number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 2
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "the number of returned elements",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Employees" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Employee"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/employee/{id}" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "get one employee by id",
        "description" : "This command will return one employee",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "supervisor id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful fetch of data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "Employee" : {
                      "$ref" : "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error fetching data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/screenshot" : {
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "post a new screenshot.",
        "description" : "This command will add a new screenshot in the server database in accordance to the defined screenshot data model.",
        "responses" : {
          "200" : {
            "description" : "Successful store of the screenshot in the database.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "SuccessResponse" : {
                      "$ref" : "#/components/schemas/Success"
                    },
                    "Screenshot" : {
                      "$ref" : "#/components/schemas/Screenshot"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Error storing data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "UnexpectedError" : {
                      "$ref" : "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "required" : [ "_id", "_v", "created_at", "email", "name", "password", "role", "surname", "tel" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "5bf01158ee71f52a2cc03a87"
          },
          "name" : {
            "type" : "string",
            "description" : "user name",
            "example" : "Ajani"
          },
          "surname" : {
            "type" : "string",
            "description" : "user surname",
            "example" : "Mohamed"
          },
          "tel" : {
            "type" : "string",
            "description" : "user phone number",
            "example" : "+7 980-530-6219"
          },
          "email" : {
            "type" : "string",
            "description" : "user email",
            "example" : "ajani.med@gmail.com"
          },
          "password" : {
            "type" : "string",
            "description" : "hashed user password",
            "example" : "sha1$a0187ac8$1$bede97ca00e74241d6f63e920b1b85c01a00d5c2"
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "This model define all users infos"
      },
      "Supervisor" : {
        "required" : [ "_id", "_v", "created_at", "function", "infos" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "3ef0555fe54f52a2cc03a87"
          },
          "infos" : {
            "description" : "the user id",
            "example" : "5bf01158ee71f52a2cc03a87",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/User/properties/_id"
            } ]
          },
          "function" : {
            "type" : "string",
            "description" : "Employee function (Quality supervisor)",
            "example" : "Quality supervisor"
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "This model define additional infos for users (supervisors)"
      },
      "Employee" : {
        "required" : [ "_id", "_v", "created_at", "function", "infos" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "7agff58ee71f5525aa03a87"
          },
          "idUser" : {
            "description" : "the user id",
            "example" : "5bf01158ee71f52a2cc03a87",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/User/properties/_id"
            } ]
          },
          "function" : {
            "type" : "string",
            "description" : "Employee function ( Web developer , Tester...",
            "example" : "Web developer"
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "This model define additional infos for users (employees)"
      },
      "TaskCategory" : {
        "required" : [ "_id", "_v", "created_at", "name" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "5bf01158ee71f52a2cc03a87"
          },
          "name" : {
            "type" : "string",
            "description" : "the task category",
            "example" : "Testing Category"
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "This model define the task category"
      },
      "Task" : {
        "required" : [ "_id", "_v", "created_at", "description", "employee", "name", "statut", "supervisor" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "5bf01158ee71f52a2cc03a87"
          },
          "name" : {
            "type" : "string",
            "description" : "task name",
            "example" : "Testing"
          },
          "description" : {
            "type" : "string",
            "description" : "task description",
            "example" : "You will test the authentification module"
          },
          "category" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/TaskCategory"
            } ]
          },
          "supervisor" : {
            "description" : "the task supervisor",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Supervisor"
            } ]
          },
          "employee" : {
            "description" : "the owner of the task (one employee)",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Employee"
            } ]
          },
          "statut" : {
            "type" : "string",
            "description" : "task statut (Open,Closed,Finished...)",
            "example" : "Open"
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "This model define tasks"
      },
      "Screenshot" : {
        "required" : [ "_id", "_v", "created_at", "name", "task" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "5bf01158ee71f52a2cc03a87"
          },
          "name" : {
            "type" : "string",
            "description" : "the scrrenshot file title",
            "example" : "screenshot_title.jpg"
          },
          "task" : {
            "description" : "screenshot's task",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Task"
            } ]
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        }
      },
      "TimeLog" : {
        "required" : [ "_id", "_v", "created_at", "name", "task" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string",
            "description" : "a mongoose ObjectId",
            "example" : "5bf01158ee71f52a2cc03a87"
          },
          "task" : {
            "description" : "screenshot's task",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Task"
            } ]
          },
          "created_at" : {
            "type" : "string",
            "description" : "document creation date",
            "format" : "date-time"
          },
          "_v" : {
            "type" : "integer",
            "description" : "document version (mongodb versioning)",
            "format" : "int32",
            "example" : 0
          }
        }
      },
      "Success" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "a simple server response description",
            "example" : "sccess message"
          },
          "code" : {
            "type" : "string",
            "example" : "success code response 200"
          }
        },
        "description" : "This model define all success response messages"
      },
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "a simple server response description",
            "example" : "error message"
          },
          "code" : {
            "type" : "string",
            "description" : "http response error code",
            "example" : "error code response"
          },
          "internalServerError" : {
            "type" : "string",
            "description" : "an intern exception throwed by one intern module",
            "example" : "a mongodb exception"
          }
        },
        "description" : "This model define all error response messages"
      },
      "body" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "the user email",
            "example" : "ajani.med@gmail.com"
          },
          "password" : {
            "type" : "string",
            "description" : "no-hashed user password",
            "example" : "My-password-1234"
          }
        }
      },
      "body_1" : {
        "required" : [ "email", "name", "password", "surname", "tel", "userRole" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "the user name",
            "example" : "Ajani"
          },
          "surname" : {
            "type" : "string",
            "description" : "user surname",
            "example" : "Mohamed"
          },
          "tel" : {
            "type" : "string",
            "description" : "user phone number",
            "example" : "+7 980-530-6219"
          },
          "email" : {
            "type" : "string",
            "description" : "user email",
            "example" : "ajani.med@gmail.com"
          },
          "password" : {
            "type" : "string",
            "description" : "no-hashed user password",
            "example" : "My-password$123"
          }
        }
      },
      "supervisoradd_supervisor" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "type" : "string",
            "description" : "the supervisor function",
            "example" : "project chief"
          }
        }
      },
      "body_2" : {
        "required" : [ "idUser", "supervisor" ],
        "type" : "object",
        "properties" : {
          "idUser" : {
            "description" : "user id",
            "example" : "5bf01158ee71f52a2cc03a87",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/User/properties/_id"
            } ]
          },
          "supervisor" : {
            "$ref" : "#/components/schemas/supervisoradd_supervisor"
          }
        }
      },
      "employeeadd_employee" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "type" : "string",
            "description" : "the supervisor function",
            "example" : "web developer"
          }
        }
      },
      "body_3" : {
        "required" : [ "employee", "idUser" ],
        "type" : "object",
        "properties" : {
          "idUser" : {
            "description" : "user id",
            "example" : "5bf01158ee71f52a2cc03a87",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/User/properties/_id"
            } ]
          },
          "employee" : {
            "$ref" : "#/components/schemas/employeeadd_employee"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}